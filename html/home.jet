<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css" integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        .chatbox{
            outline: 1px solid silver;
            min-height: 200px;
            padding: 0.5em;
        }
    </style>
</head>
<body>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h1 class="mt-3">Home page</h1>
            <hr>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <h2>WebSocket Chat</h2>
            <p>Messages</p>

            <div class="form-group">
                <p><a href="https://github.com">Go to github</a></p>
                <label for="username">Username:</label>
                <input type="text" name="username" id="username" class="form-control" placeholder="Enter your username" autocomplete="off">
            </div>

            <div class="form-group">
                <label for="message">Message:</label>
                <input type="text" name="message" id="message" class="form-control" placeholder="Enter your message" autocomplete="off">
            </div>

            <a href="javascript:void(0);" class="btn btn-outline-secondary mt-3" id="sendBtn">
                Send message
            </a>

            <input type="hidden" name="action" id="action">

            <div id="status" class="mt-4 float-end">

            </div>

            <hr>

            <div id="output" class="chatbox">
                <div class="message">
                    <strong>System:</strong> Welcome to the chat!
                </div>
            </div>

        </div>
        <div class="col-md-4">
            <h2>Online Users</h2>
            <p>Who's online</p>

            <ul id="online_users">

            </ul>
        </div>
    </div>
</div>

</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js" integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script src="/static/reconnecting-websocket.js"></script>


<script>
    let socket = null;
    let o = document.getElementById("output");
    let userField = document.getElementById("username");
    let messageField = document.getElementById("message");

    window.onbeforeunload = function() {
        console.log("Leaving the page");
        let jsonData = {}
        jsonData["action"] = "left";
        socket.send(JSON.stringify(jsonData))
    };

    document.addEventListener("DOMContentLoaded", function() {
        socket = new ReconnectingWebSocket("ws://localhost:8080/ws", null, {reconnectInterval: 3000});

        const offline = `<span class="badge bg-danger">Offline</span>`
        const online = `<span class="badge bg-success">Online</span>`
        let statusDiv = document.getElementById("status");

        socket.onopen = () => {
            console.log("WebSocket is open now.");
            statusDiv.innerHTML = online;
            socket.send("Hello Server!");
        };

        socket.onclose = () => {
            statusDiv.innerHTML = offline;
            console.log("WebSocket is closed now.");
        };

        socket.onerror = error => {
            console.error("WebSocket error observed:", error);
        };

        socket.onmessage = msg => {
            // console.log("WebSocket message received:", msg);
            // let j = JSON.parse(msg.data);
            // console.log(j)

            let data = JSON.parse(msg.data);
            console.log("Action: " + data.action);

            switch (data.action){
                case "list_users":
                    let ul = document.getElementById("online_users");
                    while (ul.firstChild) ul.removeChild(ul.firstChild);

                    if (data.connected_users.length > 0){

                        // if item not "" then add to list
                        data.connected_users.forEach(function (item) {
                            if (item !== "") {
                                let li = document.createElement("li");
                                li.appendChild((document.createTextNode(item)));
                                ul.appendChild(li);
                            }
                        });

                        // data.connected_users.forEach(function (item) {
                        //     let li = document.createElement("li");
                        //     li.appendChild((document.createTextNode(item)));
                        //     ul.appendChild(li);
                        // });
                    }
                    break;

                case "broadcast":
                    o.innerHTML = o.innerHTML + data.message + "<br>";
                    break;
            }
        };

        userField.addEventListener("change", function () {
            let jsonData = {}
            jsonData["action"] = "username";
            jsonData["username"] = this.value;
            socket.send(JSON.stringify(jsonData))
        })

        messageField.addEventListener("keydown", function (event) {
            if (event.code === "Enter") {
                if (!socket){
                    console.log("Socket is not open");
                    return false;
                }

                if (userField.value === "" || messageField.value === ""){
                    errorMessage("Please fill in all fields (username and message)");
                    return false;
                } else {
                    sendMessage()
                }

                event.preventDefault()
                event.stopPropagation()
            }
        });

        document.getElementById("sendBtn").addEventListener("click", function (event) {
            if (!socket){
                console.log("Socket is not open");
                return false;
            }

            if (userField.value === "" || messageField.value === ""){
                errorMessage("Please fill in all fields (username and message)");
                return false;
            } else {
                sendMessage()
            }

        });
        
    });

    function sendMessage() {
        let jsonData = {}
        jsonData["action"] = "broadcast";
        jsonData["username"] = userField.value;
        jsonData["message"] = messageField.value;
        socket.send(JSON.stringify(jsonData))
        messageField.value = "";
    }

    function errorMessage(msg) {
        notie.alert({
            type: "error",
            text: msg,
        })
    }

</script>

</html>